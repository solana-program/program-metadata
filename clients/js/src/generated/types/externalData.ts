/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

export type ExternalData = {
  address: Address;
  offset: number;
  length: Option<number>;
};

export type ExternalDataArgs = {
  address: Address;
  offset: number;
  length: OptionOrNullable<number>;
};

export function getExternalDataEncoder(): Encoder<ExternalDataArgs> {
  return getStructEncoder([
    ['address', getAddressEncoder()],
    ['offset', getU32Encoder()],
    [
      'length',
      getOptionEncoder(getU32Encoder(), { prefix: null, noneValue: 'zeroes' }),
    ],
  ]);
}

export function getExternalDataDecoder(): Decoder<ExternalData> {
  return getStructDecoder([
    ['address', getAddressDecoder()],
    ['offset', getU32Decoder()],
    [
      'length',
      getOptionDecoder(getU32Decoder(), { prefix: null, noneValue: 'zeroes' }),
    ],
  ]);
}

export function getExternalDataCodec(): Codec<ExternalDataArgs, ExternalData> {
  return combineCodec(getExternalDataEncoder(), getExternalDataDecoder());
}
